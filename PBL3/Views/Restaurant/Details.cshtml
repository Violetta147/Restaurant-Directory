@model PBL3.ViewModels.Search.RestaurantViewModel
@{
    ViewData["Title"] = Model.Name;
    ViewData["Description"] = Model.Description;
}

@section Styles {
    <link rel="stylesheet" href="~/css/restaurant-details.css" />
    <style>
        #restaurant-map {
            height: 300px;
            width: 100%;
            border-radius: 0.5rem;
        }
        .restaurant-hero {
            background: linear-gradient(135deg, rgba(0,0,0,0.6), rgba(0,0,0,0.3)), url('@Model.ImageUrl');
            background-size: cover;
            background-position: center;
            min-height: 300px;
            display: flex;
            align-items: end;
            color: white;
            position: relative;
        }
        .restaurant-info-overlay {
            background: rgba(0,0,0,0.7);
            padding: 2rem;
            width: 100%;
            border-radius: 0 0 0.5rem 0.5rem;
        }
        .feature-icon {
            background: rgba(var(--bs-primary-rgb), 0.1);
            color: var(--bs-primary);
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }
        .rating-large {
            font-size: 2rem;
            color: #ffc107;
        }
        .back-button {
            position: absolute;
            top: 1rem;
            left: 1rem;
            background: rgba(255,255,255,0.9);
            border: none;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #333;
            text-decoration: none;
            font-size: 1.2rem;
            transition: all 0.3s ease;
        }
        .back-button:hover {
            background: white;
            color: var(--bs-primary);
            transform: scale(1.05);
        }
    </style>
}

<!-- Restaurant Hero Section -->
<div class="restaurant-hero">
    <a href="javascript:history.back()" class="back-button" title="Quay lại">
        <i class="bi bi-arrow-left"></i>
    </a>
    <div class="restaurant-info-overlay">
        <div class="container">
            <div class="row align-items-end">
                <div class="col-md-8">
                    <h1 class="display-5 fw-bold mb-2">@Model.Name</h1>
                    <p class="lead mb-3">@Model.Description</p>
                    <div class="d-flex align-items-center flex-wrap gap-3">
                        <div class="d-flex align-items-center">
                            <div class="rating-large me-2">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <i class="bi bi-star@(i <= Math.Round(Model.Rating) ? "-fill" : "")"></i>
                                }
                            </div>
                            <span class="h4 mb-0 me-2">@Model.Rating.ToString("0.0")</span>
                            <span class="text-white-50">(@Model.ReviewCount đánh giá)</span>
                        </div>
                        <span class="badge bg-primary fs-6 px-3 py-2">@Model.Category</span>
                        <span class="badge bg-success fs-6 px-3 py-2">@Model.PriceDisplay</span>
                    </div>
                </div>
                <div class="col-md-4 text-md-end">
                    @if (Model.IsCurrentlyOpen)
                    {
                        <div class="badge bg-success fs-6 px-3 py-2 mb-2">
                            <i class="bi bi-door-open me-1"></i>
                            @if (Model.ClosingTime.HasValue)
                            {
                                <span>Mở cửa đến @Model.ClosingTimeDisplay</span>
                            }
                            else
                            {
                                <span>Đang mở cửa</span>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="badge bg-danger fs-6 px-3 py-2 mb-2">
                            <i class="bi bi-door-closed me-1"></i>
                            @if (!string.IsNullOrEmpty(Model.OpeningTimeDisplay))
                            {
                                <span>Sẽ mở lúc @Model.OpeningTimeDisplay</span>
                            }
                            else
                            {
                                <span>Đã đóng cửa</span>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container mt-4">
    <div class="row">
        <!-- Main Content -->
        <div class="col-lg-8">
            <!-- Restaurant Information -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-info-circle me-2"></i>Thông tin nhà hàng
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row g-4">
                        <div class="col-md-6">
                            <div class="d-flex align-items-start">
                                <div class="feature-icon me-3">
                                    <i class="bi bi-geo-alt"></i>
                                </div>
                                <div>
                                    <h6 class="fw-bold mb-1">Địa chỉ</h6>
                                    <p class="text-muted mb-0">@Model.Address</p>
                                    @if (Model.Distance.HasValue)
                                    {
                                        <small class="text-primary">Cách bạn @Model.DistanceDisplay</small>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="d-flex align-items-start">
                                <div class="feature-icon me-3">
                                    <i class="bi bi-telephone"></i>
                                </div>
                                <div>
                                    <h6 class="fw-bold mb-1">Số điện thoại</h6>
                                    <p class="text-muted mb-0">
                                        <a href="tel:@Model.Phone" class="text-decoration-none">@Model.Phone</a>
                                    </p>
                                </div>
                            </div>
                        </div>
                        @if (!string.IsNullOrEmpty(Model.Website))
                        {
                            <div class="col-md-6">
                                <div class="d-flex align-items-start">
                                    <div class="feature-icon me-3">
                                        <i class="bi bi-globe"></i>
                                    </div>
                                    <div>
                                        <h6 class="fw-bold mb-1">Website</h6>
                                        <p class="text-muted mb-0">
                                            <a href="@Model.Website" target="_blank" class="text-decoration-none">
                                                Xem website <i class="bi bi-box-arrow-up-right ms-1"></i>
                                            </a>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="col-md-6">
                            <div class="d-flex align-items-start">
                                <div class="feature-icon me-3">
                                    <i class="bi bi-clock"></i>
                                </div>
                                <div>
                                    <h6 class="fw-bold mb-1">Giờ mở cửa</h6>
                                    <p class="text-muted mb-0">
                                        @if (Model.OpeningTime.HasValue && Model.ClosingTime.HasValue)
                                        {
                                            <span>@Model.OpeningTimeDisplay - @Model.ClosingTimeDisplay</span>
                                        }
                                        else
                                        {
                                            <span>Giờ mở cửa chưa được cập nhật</span>
                                        }
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Keywords -->
            @if (!string.IsNullOrWhiteSpace(Model.Keywords))
            {
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-light">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-tags me-2"></i>Từ khóa
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="d-flex flex-wrap gap-2">
                            @foreach (var keyword in Model.Keywords.Split(',', StringSplitOptions.RemoveEmptyEntries))
                            {
                                <span class="badge bg-light text-dark border px-3 py-2">
                                    <i class="bi bi-hash me-1"></i>@keyword.Trim()
                                </span>
                            }
                        </div>
                    </div>
                </div>
            }

            <!-- Map Section -->
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-map me-2"></i>Vị trí trên bản đồ
                    </h5>
                </div>
                <div class="card-body p-0">
                    <div id="restaurant-map"></div>
                </div>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <!-- Quick Actions -->
            <div class="card shadow-sm mb-4 sticky-top" style="top: 2rem;">
                <div class="card-header bg-primary text-white">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-lightning me-2"></i>Hành động nhanh
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-3">
                        <a href="tel:@Model.Phone" class="btn btn-success btn-lg">
                            <i class="bi bi-telephone me-2"></i>Gọi điện
                        </a>
                        <button class="btn btn-primary btn-lg" onclick="getDirections()">
                            <i class="bi bi-geo-alt me-2"></i>Chỉ đường
                        </button>
                        @if (!string.IsNullOrEmpty(Model.Website))
                        {
                            <a href="@Model.Website" target="_blank" class="btn btn-outline-primary btn-lg">
                                <i class="bi bi-globe me-2"></i>Website
                            </a>
                        }
                        <button class="btn btn-outline-secondary btn-lg" onclick="shareRestaurant()">
                            <i class="bi bi-share me-2"></i>Chia sẻ
                        </button>
                    </div>
                </div>
            </div>

            <!-- Back to Search -->
            <div class="card shadow-sm">
                <div class="card-body text-center">
                    <h6 class="card-title">Tìm kiếm thêm?</h6>
                    <p class="card-text text-muted">Khám phá thêm các nhà hàng khác trong khu vực</p>
                    <a href="/Search" class="btn btn-outline-primary">
                        <i class="bi bi-search me-2"></i>Tiếp tục tìm kiếm
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src='https://api.mapbox.gl.js/mapbox-gl/v2.8.2/mapbox-gl.js'></script>
    <link href='https://api.mapbox.gl.js/mapbox-gl/v2.8.2/mapbox-gl.css' rel='stylesheet' />
    
    <script>
        // Initialize Mapbox map
        mapboxgl.accessToken = '@ViewData["MapboxToken"]';
        
        const map = new mapboxgl.Map({
            container: 'restaurant-map',
            style: 'mapbox://styles/mapbox/streets-v11',
            center: [@Model.Longitude, @Model.Latitude],
            zoom: 15
        });

        // Add restaurant marker
        const marker = new mapboxgl.Marker({
            color: '#dc3545'
        })
        .setLngLat([@Model.Longitude, @Model.Latitude])
        .setPopup(new mapboxgl.Popup().setHTML(`
            <div class="p-2">
                <h6 class="fw-bold">@Model.Name</h6>
                <p class="mb-1 small">@Model.Address</p>
                <div class="d-flex align-items-center">
                    <span class="text-warning me-1">★</span>
                    <span>@Model.Rating.ToString("0.0")</span>
                </div>
            </div>
        `))
        .addTo(map);

        // Add navigation control
        map.addControl(new mapboxgl.NavigationControl());

        // Functions for quick actions
        function getDirections() {
            const userLat = 21.0285; // Default to Hanoi center, should be replaced with user's actual location
            const userLng = 105.8542;
            
            // Open Google Maps with directions
            const url = `https://www.google.com/maps/dir/${userLat},${userLng}/@Model.Latitude,@Model.Longitude`;
            window.open(url, '_blank');
        }

        function shareRestaurant() {
            if (navigator.share) {
                navigator.share({
                    title: '@Model.Name',
                    text: '@Model.Description',
                    url: window.location.href,
                });
            } else {
                // Fallback: copy to clipboard
                navigator.clipboard.writeText(window.location.href).then(() => {
                    alert('Đã sao chép link nhà hàng vào clipboard!');
                });
            }
        }

        // Add some map interactions
        map.on('load', function() {
            // Optional: Add a circle around the restaurant
            map.addSource('restaurant-area', {
                'type': 'geojson',
                'data': {
                    'type': 'Feature',
                    'geometry': {
                        'type': 'Point',
                        'coordinates': [@Model.Longitude, @Model.Latitude]
                    }
                }
            });

            map.addLayer({
                'id': 'restaurant-circle',
                'type': 'circle',
                'source': 'restaurant-area',
                'paint': {
                    'circle-radius': 50,
                    'circle-color': 'rgba(220, 53, 69, 0.2)',
                    'circle-stroke-width': 2,
                    'circle-stroke-color': '#dc3545'
                }
            });
        });
    </script>
}
