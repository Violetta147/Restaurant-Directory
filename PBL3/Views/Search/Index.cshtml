@model SearchResultsViewModel
@{
    ViewData["Title"] = "Tìm kiếm nhà hàng";
    ViewData["BodyClass"] = "search-page";
    var categories = ViewBag.Categories as List<string> ?? new List<string>();
}

<!-- Styles được bơm vào _Layout -->
@section Styles {
    <!-- Mapbox GL CSS -->
    <link href="https://api.mapbox.com/mapbox-gl-js/v3.12.0/mapbox-gl.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <!-- Custom CSS -->
    <link rel="stylesheet" href="~/css/search-results.css" asp-append-version="true">
    <link rel="stylesheet" href="~/css/restaurant-card.css" asp-append-version="true"/>
}

<!-- Hidden fields to pass data to JavaScript -->
<input type="hidden" id="mapbox-token" value="@ViewData["MapboxToken"]">
<input type="hidden" id="map-initial-lat" value="@(Model.UserLat?.ToString(System.Globalization.CultureInfo.InvariantCulture) ?? Model.MapCenterLat.ToString(System.Globalization.CultureInfo.InvariantCulture))">
<input type="hidden" id="map-initial-lng" value="@(Model.UserLng?.ToString(System.Globalization.CultureInfo.InvariantCulture) ?? Model.MapCenterLng.ToString(System.Globalization.CultureInfo.InvariantCulture))">
<input type="hidden" id="map-initial-query" value="@Model.Query">
<input type="hidden" id="map-initial-category" value="@Model.SelectedCategory">
<input type="hidden" id="map-initial-distance-category" value="@Model.SelectedDistanceCategory">

<!-- Main Page Content: Two main sections (Left and Right) -->
<div class="container-fluid px-0 mt-4" id="main-frame">
    <div class="d-flex w-100">
        <!-- Left Section: Contains Filters Column and Restaurant List Column -->
        <div id="left-section">
            <!-- Filters Column -->
            <div id="filters-column">
                <div class="card shadow-sm mb-md-0 mb-4">
                    <div class="card-header bg-light">
                        <h5 class="mb-0"><i class="bi bi-funnel-fill me-2"></i>Bộ lọc</h5>
                    </div>
                        <div class="card-body">
                            <form asp-action="Index" asp-controller="Search" method="get" id="filter-form" class="row g-2">
                                <!-- Hidden fields to persist main search query and location from navbar -->
                                <input type="hidden" name="query" value="@Model.Query" />
                                <input type="hidden" name="location" value="@Model.Location" />
                                @if (Model.UserLat.HasValue)
                                {
                                    <input type="hidden" name="lat" value="@Model.UserLat.Value.ToString(System.Globalization.CultureInfo.InvariantCulture)" />
                                }
                                @if (Model.UserLng.HasValue)
                                {
                                    <input type="hidden" name="lng" value="@Model.UserLng.Value.ToString(System.Globalization.CultureInfo.InvariantCulture)" />
                                }
                                <input type="hidden" name="page" value="1" /> <!-- Always reset to page 1 on filter change -->
                                <input type="hidden" name="pageSize" value="@Model.PageSize" />

                                <!-- Sort Options -->
                                <div class="col-12 mb-3">
                                    <label for="selectedSortOption" class="form-label fw-bold">Sắp xếp theo</label>
                                    <select asp-for="SelectedSortOption" asp-items="Model.SortOptions" class="form-select form-select-sm"></select>
                                </div>

                                <!-- Category Filter -->   
                                <div class="col-12 mb-3">
                                    <label for="selectedCategory" class="form-label fw-bold">Danh mục</label>
                                    <select asp-for="SelectedCategory" asp-items="Model.Categories" class="form-select form-select-sm"></select>
                                </div>

                                <!-- Distance Filter -->
                                <div class="col-12 mb-3">
                                    <label for="selectedDistanceCategory" class="form-label fw-bold">Khoảng cách</label>
                                    <select asp-for="SelectedDistanceCategory" asp-items="Model.DistanceOptions" class="form-select form-select-sm"></select>
                                </div>
                                
                                <!-- MinRating -->
                                <div class="col-12 mb-3">
                                    <label asp-for="MinRating" class="form-label fw-bold">Đánh giá tối thiểu</label>
                                    <select asp-for="MinRating" class="form-select form-select-sm">
                                        <option value="">Bất kỳ</option>
                                        <option value="4.5">4.5+ sao</option>
                                        <option value="4">4+ sao</option>
                                        <option value="3.5">3.5+ sao</option>
                                        <option value="3">3+ sao</option>
                                    </select>
                                </div>
                                
                                <!-- Other Filters (IsOpenNow) -->
                                <div class="col-12 mb-3">
                                    <div class="form-check">
                                        <input type="checkbox" id="isOpenNowCheck" class="form-check-input" @(Model.IsOpenNow ? "checked" : "") />
                                        <label for="isOpenNowCheck" class="form-check-label">Đang mở cửa</label>
                                        <input type="hidden" name="isOpenNow" id="isOpenNowHidden" value="@(Model.IsOpenNow.ToString().ToLower())" />
                                    </div>
                                </div>

                                <div class="col-12">
                                    <div class="d-grid w-100">
                                        <button type="submit" id="apply-filters-btn" class="btn btn-primary btn-sm"><i class="bi bi-filter me-2"></i>Áp dụng bộ lọc</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- Restaurant List Column -->
                <div id="restaurants-column">
                    @{
                        bool hasRestaurants = Model.Restaurants?.Any() ?? false;
                    }
                    <div class="card shadow-sm">
                        <div class="card-header bg-light">
                            <div class="d-flex justify-content-between align-items-center">
                                <h5 class="mb-0">
                                    @if (!hasRestaurants)
                                    {
                                        <span class="fw-bold">
                                            Không tìm thấy kết quả nào
                                            @if (!string.IsNullOrEmpty(Model.Query))
                                            {
                                                <text> cho "@Model.Query"</text>
                                            }
                                            @if (!string.IsNullOrEmpty(Model.Location))
                                            {
                                                <text> tại @Model.Location</text>
                                            }
                                        </span>
                                    }
                                    else
                                    {
                                        @if (!string.IsNullOrEmpty(Model.Query))
                                        {
                                            <span class="fw-bold">"@Model.Query"</span>
                                        }
                                        else if (!string.IsNullOrEmpty(Model.SelectedCategory))
                                        {
                                            <span class="fw-bold">@Model.SelectedCategory</span>
                                        }
                                        else
                                        {
                                            <span>Tất cả nhà hàng</span>
                                        }
                                        @if (!string.IsNullOrEmpty(Model.Location))
                                        {
                                            <span class="text-secondary"> gần @Model.Location</span>
                                        }
                                        else if (string.IsNullOrEmpty(Model.Query) && string.IsNullOrEmpty(Model.SelectedCategory))
                                        {
                                            <span class="text-secondary"> trong vùng @(Model.SelectedDistanceCategory == "3km" ? "3km" : Model.SelectedDistanceCategory)</span>
                                        }
                                    }
                                </h5>
                            </div>
                        </div>

                        <div class="card-body">
                            @if (!hasRestaurants)
                            {
                                <div class="p-4">
                                    <p class="mb-2 fw-bold">Gợi ý để cải thiện kết quả tìm kiếm:</p>
                                    <ul class="list-unstyled">
                                        <li class="mb-2"><i class="bi bi-geo-alt text-primary me-2"></i> Thử một địa điểm khác</li>
                                        <li class="mb-2"><i class="bi bi-spell-check text-primary me-2"></i> Kiểm tra lỗi chính tả hoặc thử cách viết khác</li>
                                        <li class="mb-2"><i class="bi bi-funnel text-primary me-2"></i> Thử bỏ một số bộ lọc hiện tại</li>
                                    </ul>
                                </div>
                            }
                            else
                            {
                                <div id="restaurant-list" class="row row-cols-1 g-4">
                                    @await Html.PartialAsync("_RestaurantListPartial", Model.Restaurants)
                                </div>

                                <!-- Pagination -->
                                <div class="mt-4 d-flex justify-content-center">
                                    @Html.PagedListPager(Model.Restaurants, page => $"javascript:loadPage({page})", 
                                    new PagedListRenderOptions {
                                        LiElementClasses = new[] { "page-item" },
                                        PageClasses = new[] { "page-link" },
                                        DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                                        DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                                        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                                        DisplayLinkToNextPage = PagedListDisplayMode.Always,
                                        MaximumPageNumbersToDisplay = 5,
                                        UlElementClasses = new[] { "pagination", "pagination-sm" }
                                    })
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Right Section: Map -->
            <div id="map-section">
                <div class="position-relative">
                    <button id="reload-map-button" class="btn btn-light btn-sm" style="display: none;">
                        <i class="bi bi-arrow-clockwise me-1"></i>Tải lại bản đồ
                    </button>
                    <div id="mapbox-container" style="width: 100%; height: 600px; border: 2px solid #ddd; background-color: #f8f9fa;"></div>
                </div>
            </div>
        </div>
    </div>

@section Scripts {
    <script>
        // Handle checkbox to avoid duplicate isOpenNow parameters
        document.addEventListener('DOMContentLoaded', function() {
            const checkbox = document.getElementById('isOpenNowCheck');
            const hiddenField = document.getElementById('isOpenNowHidden');
            
            // Sync hidden field when checkbox changes
            checkbox.addEventListener('change', function() {
                hiddenField.value = this.checked ? 'true' : 'false';
            });
        });

        // Global function for pagination
        window.loadPage = function(pageNumber) {
            console.log('loadPage called with page:', pageNumber);
            
            // Lấy các tham số tìm kiếm hiện tại
            const params = new URLSearchParams(window.location.search);
            
            // Cập nhật tham số trang
            params.set('page', pageNumber);
            
            console.log('Requesting URL:', `/Search/GetRestaurants?${params.toString()}`);
            
            // Hiển thị loading
            const restaurantList = document.getElementById('restaurant-list');
            if (restaurantList) {
                restaurantList.innerHTML = '<div class="text-center py-5"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div></div>';
            }
            
            // Gửi yêu cầu AJAX
            fetch(`/Search/GetRestaurants?${params.toString()}`)
                .then(response => {
                    console.log('Response status:', response.status);
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.text();
                })
                .then(html => {
                    console.log('Received HTML length:', html.length);
                    // Cập nhật nội dung danh sách nhà hàng
                    if (restaurantList) {
                        restaurantList.innerHTML = html;
                    }
                    
                    // Cập nhật URL mà không tải lại trang
                    const newUrl = `${window.location.pathname}?${params.toString()}`;
                    window.history.pushState({ path: newUrl }, '', newUrl);
                    
                    // Reload restaurants on map after AJAX update
                    if (typeof loadRestaurantsFromList === 'function') {
                        console.log('Calling loadRestaurantsFromList');
                        loadRestaurantsFromList();
                    } else {
                        console.warn('loadRestaurantsFromList function not found');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    if (restaurantList) {
                        restaurantList.innerHTML = '<div class="alert alert-danger">Đã xảy ra lỗi khi tải dữ liệu. Vui lòng thử lại.</div>';
                    }
                });
        }
    </script>
    
    <!-- Mapbox GL JS -->
    <script src="https://api.mapbox.com/mapbox-gl-js/v3.12.0/mapbox-gl.js"></script>
    <script src="~/js/search-map.js" asp-append-version="true"></script>
}